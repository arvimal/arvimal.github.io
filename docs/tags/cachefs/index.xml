<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cachefs on The Child is Father of the Man</title>
    <link>/tags/cachefs/</link>
    <description>Recent content in cachefs on The Child is Father of the Man</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Nov 2014 00:00:00 +0000</lastBuildDate><atom:link href="/tags/cachefs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FSCache and the on-disk structure of the cached data</title>
      <link>/posts/2014/11/2014-11-12-structure-of-the-cached-content-in-fscache/</link>
      <pubDate>Wed, 12 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014/11/2014-11-12-structure-of-the-cached-content-in-fscache/</guid>
      <description>The &amp;lsquo;cachefilesd&amp;rsquo; kernel module will create two directories at the location specified in /etc/cachefilesd.conf. By default it&amp;rsquo;s /var/cache/fscache/.
 [root@montypython ~]# lsmod |grep -i cache cachefiles 40871 1 fscache 62354 3 nfs,cachefiles,nfsv4
 Those are /var/cache/fscache/cache and /var/cache/fscache/graveyard.
The cache structure is maintained inside &amp;lsquo;/var/cache/fscache/cache/&amp;rsquo;, while anything that is retired or culled is moved to &amp;lsquo;graveyard&amp;rsquo;. The &amp;lsquo;cachefilesd&amp;rsquo; daemon monitors &amp;lsquo;graveyard&amp;rsquo; using &amp;lsquo;dnotify&amp;rsquo; and will delete anything that is in there.</description>
    </item>
    
    <item>
      <title>FS-Cache and CacheFS, what are the differences?</title>
      <link>/posts/2014/09/2014-09-14-fs-cache-and-cachefs-what-are-the-differences/</link>
      <pubDate>Sun, 14 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014/09/2014-09-14-fs-cache-and-cachefs-what-are-the-differences/</guid>
      <description>FS-Cache and CacheFS. Are there any differences between these two? Initially, I thought both were same. But no, it&amp;rsquo;s not.
CacheFS is the backend implementation which caches the data onto the disk and mainpulates it, while FS-Cache is an interface which talks to CacheFS.
So why do we need two levels here?
FS-Cache was introduced as an API or front-end for CacheFS, which can be used by any file system driver.</description>
    </item>
    
  </channel>
</rss>
