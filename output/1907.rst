Names, Namespaces, and Scopes in Python
#######################################
:date: 2017-08-09 08:06
:author: arvimal
:category: Programming, Python
:tags: namespaces, Object Oriented Programming, python
:slug: 1907
:status: draft

**N**\ ames and namespaces are important concepts in Python required for a proper understanding of the language and its internals.

This post tries to put together some very common knowledge in writing.

What's in a name?
~~~~~~~~~~~~~~~~~

A name is just a pointer that refers to an object in memory. It can be a string or an alphabet, but never a number

 

NOTE: Refer the second and third chapter in Python Epiphanies.

Scopes

 

 

Search Order

 

 

Function locals

 

Local scopes

 

Overriding Local scopes and more (builtin scopes for example)

 

len is a builtin, but we can override this using ``len = "whatever"``.  A ``del len`` will restore this, since the original len is not defined in the current scope, but in the builtins..

But a = 10, and then a = 20 will override a = 10.. But a del a won't restore the previous value because the name ``a`` is being deleted from the local scope and both were defined in the local scope.. there were no two definitions at the same time, in the first place.. it was only a = 20..

 
