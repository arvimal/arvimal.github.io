<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on arvimal.github.io</title>
    <link>https://arvimal.github.io/docs/</link>
    <description>Recent content in Docs on arvimal.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2023, Vimal A.R; all rights reserved.</copyright><atom:link href="https://arvimal.github.io/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/00-boot-process/00-boot-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/00-boot-process/00-boot-process/</guid>
      <description>
        
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/00-boot-process/00-linux-booting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/00-boot-process/00-linux-booting/</guid>
      <description>
        
          
            The Linux Boot process 1. Power up the machine
The Boot process starts when a user powers up the machine.
2. Power supply starts up, and regulates itself into the operating voltage.
This may take less than a millisecond.
3. The Power supply system sends the PowerGood signal to the Motherboard.
The ATX specification defines the Power-Good signal as a +5-volt (V) signal generated in the power supply when it has passed its internal self-tests and the output voltages have sthbilized.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/00-boot-process/check-if-your-computer-uses-uefi-or-bios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/00-boot-process/check-if-your-computer-uses-uefi-or-bios/</guid>
      <description>
        
          
            Check if Your Computer Uses UEFI or BIOS [Both in Linux and Windows] https://itsfoss.com/check-uefi-or-bios/
Brief: A quick tutorial to tell you if your system uses the modern UEFI or the legacy BIOS. Instructions for both Windows and Linux have been provided.
When you are trying to dual boot Linux with Windows, you would want to know if you have UEFI or BIOS boot mode on your system. It helps you decide in partition making for installing Linux.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/00-boot-process/how-to-boot-into-single-user-mode-in-centos-8-rhel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/00-boot-process/how-to-boot-into-single-user-mode-in-centos-8-rhel/</guid>
      <description>
        
          
            How To Boot into Single-User Mode in CentOS 8 / RHEL 8 | ITzGeek https://www.itzgeek.com/how-tos/linux/centos-how-tos/how-to-boot-into-single-user-mode-in-rhel-8.html
Single-User mode is one of the user run levels in the Linux operating system. It is used for doing the administrative task such as recovering the file system and the lost root password etc.
In single-user mode, the services won’t start, and none of the users are allowed to log in except root. Also, the system would not prompt for login, which means you do not need a password to get root access.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/00-boot-process/how-to-recover-or-rescue-corrupted-grub-boot-loade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/00-boot-process/how-to-recover-or-rescue-corrupted-grub-boot-loade/</guid>
      <description>
        
          
            How to Recover or Rescue Corrupted Grub Boot Loader in CentOS 7 https://www.tecmint.com/recover-or-rescue-corrupted-grub-boot-loader-in-centos-7/
In this tutorial we’ll cover the process of rescuing a corrupted boot loader in CentOS 7 or Red Hat Enterprise Linux 7 and recover the a forgotten root password.
The GRUB boot loader can sometimes be damaged, compromised or deleted in CentOS due to various issues, such as hardware or software related failures or sometimes can be replaced by other operating systems, in case of dual-booting.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/00-boot-process/initramfs-dracut-and-the-dracut-emergency-shell-/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/00-boot-process/initramfs-dracut-and-the-dracut-emergency-shell-/</guid>
      <description>
        
          
            InitRAMFS, Dracut, and the Dracut Emergency Shell - Fedora Magazine https://fedoramagazine.org/initramfs-dracut-and-the-dracut-emergency-shell/
![[/dracut.png]]
The Linux startup process goes through several stages before reaching the final graphical or multi-user target. The initramfs stage occurs just before the root file system is mounted. Dracut is a tool that is used to manage the initramfs. The dracut emergency shell is an interactive mode that can be initiated while the initramfs is loaded.
This article will show how to use the dracut command to modify the initramfs.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/00-boot-process/the-fundamentals-of-network-booting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/00-boot-process/the-fundamentals-of-network-booting/</guid>
      <description>
        
          
            The fundamentals of network booting https://networkboot.org/fundamentals/
What is network booting? Network booting, or booting from LAN as it is also called, is a process which allows a computer to start up and load an operating system or other program directly from the network without any locally attached storage device, like a floppy, CDROM, USB stick or hard drive.
On Intel architecture computers this is made possible with the PXE standard. PXE extends the features of the BIOS so that it can run software directly from the network.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/00-boot-process/the-kernel-newbie-corner-initrd-and-initramfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/00-boot-process/the-kernel-newbie-corner-initrd-and-initramfs/</guid>
      <description>
        
          
            The Kernel Newbie Corner: &amp;quot;initrd&amp;quot; and &amp;quot;initramfs&amp;quot;-What&#39;s Up With That? - Linux.com https://www.linux.com/tutorials/kernel-newbie-corner-initrd-and-initramfs-whats/
This week, I’m not going to write a formal column so much as just free associate a bit regarding an exchange we had recently on the Kernel Newbies mailing list regarding the ideas of initrd and initramfs, and what they’re for and, most importantly, how they differ. And that’s where we might get deliberately vague since different people use the terminology differently, so I’ll present my view of the terms and the way I use them, whereupon you’re free to disagree vehemently.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/01-uefi-efi/linux-on-your-laptop-a-closer-look-at-efi-boot-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/01-uefi-efi/linux-on-your-laptop-a-closer-look-at-efi-boot-options/</guid>
      <description>
        
          
            Linux on your laptop: A closer look at EFI boot options https://www.zdnet.com/article/linux-on-your-laptop-a-closer-look-at-efi-boot-options/
For some time now I have gotten a slow but steady volume of requests that I write about UEFI firmware and EFI boot relative to installing and maintaining Linux. As a result of a casual comment I made in a recent post about installing Linux on a new laptop, the volume has gone up considerably.
So in this post I will review and explain some of what I consider to be the most important points about UEFI firmware and Linux systems.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/01-uefi-efi/secure-boot-with-qemu-and-uefi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/01-uefi-efi/secure-boot-with-qemu-and-uefi/</guid>
      <description>
        
          
            Secure boot with QEMU and UEFI https://www.labbott.name/blog/2016/09/15/secure-ish-boot-with-qemu/
(Edit 9/21: I&#39;ve gotten some feedback and clarifications about a few steps and also updated the wiki. Thanks to the OVMF developers!)
Despite having too many machines in my possession, none of the x86 machines I have are currently set up to boot with UEFI. This put a real damper on my plans to poke at secure boot. Fortunately, there is virtualization technology to solve this problem.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/01-uefi-efi/the-refind-boot-manager-managing-secure-boot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/01-uefi-efi/the-refind-boot-manager-managing-secure-boot/</guid>
      <description>
        
          
            The rEFInd Boot Manager: Managing Secure Boot http://www.rodsbooks.com/refind/secureboot.html
This Web page is provided free of charge and with no annoying outside ads; however, I did take time to prepare it, and Web hosting does cost money. If you find this Web page useful, please consider making a small donation to help keep this site up and running. Thanks!
This page is part of the documentation for the rEFInd boot manager. If a Web search has brought you here, you may want to start at the main page.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/01-uefi-efi/uefi-boot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/01-uefi-efi/uefi-boot/</guid>
      <description>
        
          
            You’ve probably read a lot of stuff on the internet about UEFI. Here is something important you should understand: 95% of it was probably garbage. If you think you know about UEFI, and you derived your knowledge anywhere other than the UEFI specifications, [[http://mjg59.dreamwidth.org/|mjg59′s blog]] or one of a few other vaguely reliable locations/people – [[http://www.rodsbooks.com/linux-uefi/|Rod Smith]], or [[http://blog.uncooperative.org/|Peter Jones]], or Chris Murphy, or the documentation of the relatively few OSes whose developers actually know what the hell they’re doing with UEFI – what you think you know is likely a toxic mix of misunderstandings, misconceptions, half-truths, propaganda and downright lies.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/02-grub2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/02-grub2/</guid>
      <description>
        
          
            Get started with GRUB2 https://www.certdepot.net/rhel7-get-started-grub2/
Note: This is an RHCSA 7 exam objective.
Presentation of GRUB2 GRUB2 is the new Linux bootloader. GRUB2 stands for GRand Unified Bootloader version 2.
As GRUB was not maintained for some time and lacked some critical features like GPT management needed to handle disks bigger than 2.4TB, it was decided to start a new version from scratch with modularity in mind.
GRUB2 provides the following new features:
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/boot-loader-specification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/boot-loader-specification/</guid>
      <description>
        
          
            Boot Loader Specification https://systemd.io/BOOT_LOADER_SPECIFICATION/
TL;DR: Currently there’s no common boot scheme across architectures and platforms for open-source operating systems. There’s also little cooperation between multiple distributions in dual-boot (or triple, … multi-boot) setups. We’d like to improve this situation by getting everybody to commit to a single boot configuration format that is based on drop-in files, and thus is robust, simple, works without rewriting configuration files and is free of namespace clashes.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/centos-rhel-7-grub2-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/centos-rhel-7-grub2-configuration-file/</guid>
      <description>
        
          
            CentOS / RHEL 7: GRUB2 configuration file /boot/grub2/grub.cfg explained – The Geek Diary https://www.thegeekdiary.com/centos-rhel-7-grub2-configuration-file-bootgrub2grub-cfg-explained/
The GRUB2 configuration file /boot/grub2/grub.cfg – Starting RHEL 7 GRUB 2 is the bootloader. The GRUB 2 configuration file is /boot/grub2/grub.cfg. – Do not edit this file directly. Use the grub2-mkconfig command to generate grub.cfg. This command uses the template scripts in /etc/grub.d and menu-configuration settings taken from /etc/default/grub when generating grub.cfg. – The /etc/grub2.cfg file is a symbolic link to /boot/grub2/grub.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/centos-rhel7-how-to-reinstall-grub2-from-rescue-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/centos-rhel7-how-to-reinstall-grub2-from-rescue-mode/</guid>
      <description>
        
          
            CentOS / RHEL 7 : How to reinstall GRUB2 from rescue mode https://www.thegeekdiary.com/centos-rhel-7-how-to-reinstall-grub2-from-rescue-mode/
CentOS / RHEL 7 now includes GRUB2 which uses a new way of installing to the MBR of your boot device. You may have to reinstall the GRUB2 bootloader if your system is not bootable after a failure. In order to reinstall GRUB2 you have to boot into rescue mode. Follow the steps below to boot into rescue mode and reinstall GRUB2 bootloader.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/difference-between-grubx64-and-shimx64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/difference-between-grubx64-and-shimx64/</guid>
      <description>
        
          
            Difference between grubx64 and shimx64? https://askubuntu.com/questions/342365/what-is-the-difference-between-grubx64-and-shimx64
Typically, EFI/ubuntu/grubx64.efi on the EFI System Partition (ESP) is the GRUB binary, and EFI/ubuntu/shimx64.efi is the binary for shim.
The latter is a relatively simple program that provides a way to boot on a computer with Secure Boot active. On such a computer, an unsigned version of GRUB won&#39;t launch, and signing GRUB with Microsoft&#39;s keys is impossible, so shim bridges the gap and adds its own security tools that parallel those of Secure Boot.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/grub2-troubleshooting-community-help-wiki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/grub2-troubleshooting-community-help-wiki/</guid>
      <description>
        
          
            Grub2/Troubleshooting - Community Help Wiki https://help.ubuntu.com/community/Grub2/Troubleshooting#grub_rescue.3E-1
[[Grub2 Troubleshooting - Community Help Wiki 8b8db45a75634d82a27b2181e8904881 Troubleshooting]]
set prefix=(hdX,Y)/boot/grub Use the values determined earlier.
Example: If the Ubuntu system is on sda5, enter: set prefix=(hd0,5)/boot/grub
Confirm the correct X,Y values and press ENTER.
Example: If the Ubuntu system is on sda5, enter: set root=(hd0,5)
Load the normal module.
If the module fails to load, try the full path: insmod (hdX,Y)/boot/grub/normal.mod
Transition to the normal GRUB 2 mode with increased functionality.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/how-to-reset-a-root-password-on-fedora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/how-to-reset-a-root-password-on-fedora/</guid>
      <description>
        
          
            How to reset a root password on Fedora https://fedoramagazine.org/reset-root-password-fedora/
A system administrator can easily reset a password for a user that has forgotten their password. But what happens if the system administrator forgets the root password? This guide will show you how to reset a lost or forgotten root password. Note that to reset the root password, you need to have physical access to the machine in order to reboot and to access GRUB settings.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/preliminary-work-getting-grub2-on-a-qemu-disk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/preliminary-work-getting-grub2-on-a-qemu-disk/</guid>
      <description>
        
          
            Preliminary Work: Getting GRUB2 on a qemu disk https://codezen.org/viridis-ng/2012/08/31/preliminary-work-getting-a-grub2-on-a-qemu-disk/
In this article, we’ll cover the very first step in writing a toy operating system: preparing a disk to boot your kernel from.
We’ll be using GRUB (GRand Unified Bootloader) version 2, which has plenty of nice features, is modern, and is what Linux uses so it’s very well tested.
Assumptions This is not a hand-holdy kind of write-up because this isn’t a hand-holdy subject.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/pxe-boot-what-is-pxe-how-does-it-work/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/pxe-boot-what-is-pxe-how-does-it-work/</guid>
      <description>
        
          
            PXE Boot, What is PXE? How does it work? https://linuxhit.com/pxe-boot-what-is-pxe-how-does-it-work/
How does it work? Putting it all together PXE Boot – Introduction What can you expect to learn about PXE from this post? High level overview of PXE boot process. Use cases for PXE boot. Detailed end to end overview of the PXE boot process. Technical details of each stage. What is PXE? In this post we are deep diving into PXE boot.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/two-ways-to-boot-with-old-kernel-version-in-rhel-8-using-grubby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/two-ways-to-boot-with-old-kernel-version-in-rhel-8-using-grubby/</guid>
      <description>
        
          
            2 ways to boot with old kernel version in RHEL 8 using grubby https://www.golinuxcloud.com/boot-with-old-kernel-version-rhel-8-grubby/
How to set default boot kernel in RHEL 8 Linux using [[Grubby]]? How to change the default boot entry for kernel in RHEL 8? How to boot with old kernel version in RHEL 8? How to revert to previous kernel version ?
![[2 ways to boot with old kernel version in RHEL 8 u a8dc265805864b838050c6c5c42008b6 old-kernel.jpg]]
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/two-ways-to-update-and-rebuild-initrd-image-in-centos-and-rhel8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/02-boot-loaders/two-ways-to-update-and-rebuild-initrd-image-in-centos-and-rhel8/</guid>
      <description>
        
          
            2 ways to update and rebuild initrd image in CentOS/RHEL 7 and 8 https://www.golinuxcloud.com/update-rebuild-initrd-image-centos-rhel-7-8/
How do I unpack or uncompress, and then repack or re-compress, an initrd or initramfs boot image file? How do I modify the contents of an initrd or initramfs? How do I view an initrd or initramfs? How to customize initrd in RHEL Linux. How to rebuild initrd image in RHEL 8 Linux. How to update initrd in RHEL 7 Linux.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/04-troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/04-troubleshooting/</guid>
      <description>
        
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/how-to-view-and-change-boot-sequence-in-linux-term/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/how-to-view-and-change-boot-sequence-in-linux-term/</guid>
      <description>
        
          
            How to View and Change Boot Sequence in Linux Terminal https://www.makeuseof.com/how-to-view-and-change-boot-sequence-in-linux-terminal/
Have you ever had a need to change your boot sequence via terminal? Maybe you&#39;re doing so remotely via SSH, or maybe you can&#39;t manage to get into the BIOS during that two second sweet spot when your computer is first turned on. In this article, we&#39;ll explain how to easily change the boot sequence via terminal.
View the Boot Sequence Assuming your computer supports EFI (Extensive Firmware Interface), which is pretty near all computers nowadays, you may view the current boot sequence via terminal with the command:
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/recover-a-red-hat-8-or-centos-8-instance-thats-failing-due-to-grub2-bls-configuration-file-issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/recover-a-red-hat-8-or-centos-8-instance-thats-failing-due-to-grub2-bls-configuration-file-issues/</guid>
      <description>
        
          
            Recover a Red Hat 8 or CentOS 8 Instance That&#39;s Failing Due to GRUB2 BLS Configuration File Issues https://aws.amazon.com/premiumsupport/knowledge-center/ec2-linux-recover-blscfg-file/
I&#39;m running a Red Hat 8 or CentOS 8 Amazon Elastic Compute Cloud (Amazon EC2) instance. How can I recover the BLS configuration (blscfg) file found under /boot/loader/entries/ if it is corrupted or deleted?
GRUB2 in RHEL 8 and Centos 8 uses blscfg files and entries in /boot/loader for the boot configuration, as opposed to the previous grub.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/regenerate-a-new-initramfs-or-initrd-in-rhel-fedora-centos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/regenerate-a-new-initramfs-or-initrd-in-rhel-fedora-centos/</guid>
      <description>
        
          
            https://wiki.centos.org/TipsAndTricks/CreateNewInitrd
If you have changed a motherboard or moved a disk to a different system it may fail to boot due to the lack of appropriate drivers in the initial RAM disk image (initramfs for CentOS 6, initrd for CentOS 5).
Boot in Rescue Mode Boot from a CentOS installation disc (for example, CD #1 or DVD). Type &amp;quot;linux rescue&amp;quot; at the &amp;quot;boot:&amp;quot; prompt. Mount all filesystems in read-write mode. Create the New Initramfs or Initrd Change root to real root (&#39;/&#39;) on your hard disk and make the new initramfs or initrd.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/reset-lost-root-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/reset-lost-root-password/</guid>
      <description>
        
          
            Reset lost root password https://wiki.archlinux.org/index.php/Reset_lost_root_password
This guide will show you how to reset a forgotten root password. Several methods are listed to help you accomplish this.
Warning: An attacker could use the methods mentioned below to break into your system. No matter how secure the operating system is or how good passwords are, having physical access amounts to loading an alternate OS and exposing your data, unless you use disk encryption.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/tip-vm-wont-boot-troubleshoot-with-guestfish/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/04-troubleshooting/tip-vm-wont-boot-troubleshoot-with-guestfish/</guid>
      <description>
        
          
            Tip: VM won’t boot, troubleshoot with guestfish | Richard WM Jones https://rwmj.wordpress.com/2010/02/09/tip-vm-wont-boot-troubleshoot-with-guestfish/
Unbootable virtual machine? Here are three useful guestfish commands to help. (You can also consider using virt-rescue).
1. Edit /boot/grub/grub.conf 1$ guestfish -i Rawhide 2 3Welcome to guestfish, the libguestfs filesystem interactive shell for 4editing virtual machine filesystems. 5 6Type: &amp;#39;help&amp;#39; for help with commands 7 &amp;#39;quit&amp;#39; to quit the shell 8 9&amp;gt;&amp;lt;fs&amp;gt; ls /boot/ 10System.map-2.6.32.1-9.fc13.x86_64 11System.map-2.6.32.3-21.fc13.x86_64 12System.map-2.6.33-0.40.rc7.git0.fc13.x86_64 13config-2.
          
          
        
      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://arvimal.github.io/docs/linux-booting/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arvimal.github.io/docs/linux-booting/readme/</guid>
      <description>
        
          
            The Linux Boot process 1. Power up the machine
The Boot process starts when a user powers up the machine.
2. Power supply starts up, and regulates itself into the operating voltage.
This may take less than a millisecond.
3. The Power supply system sends the PowerGood signal to the Motherboard.
The ATX specification defines the Power-Good signal as a +5-volt (V) signal generated in the power supply when it has passed its internal self-tests and the output voltages have stabilized.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
