<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>abstract-base-class - Tag - My New Hugo Site</title>
        <link>http://example.org/tags/abstract-base-class/</link>
        <description>abstract-base-class - Tag - My New Hugo Site</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 14 Jun 2016 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://example.org/tags/abstract-base-class/" rel="self" type="application/rss+xml" /><item>
    <title>Abstract Base Classes/Methods - Object Oriented Programming</title>
    <link>http://example.org/2016-06-14-abstract-base-classesmethods-object-oriented-programming/</link>
    <pubDate>Tue, 14 Jun 2016 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/2016-06-14-abstract-base-classesmethods-object-oriented-programming/</guid>
    <description><![CDATA[_A_bstract classes, in short, are classes that are supposed to be inherited or subclassed, rather than instantiated.
Through Abstract Classes, we can enforce a blueprint on the subclasses that inherit the Abstract Class. This means thatÂ Abstract classes can be used to define a set of methods that must be implemented by it subclasses.
Abstract classes are used when working on large projects where classes have to be inherited, and need to strictly follow certain blueprints.]]></description>
</item>
</channel>
</rss>
