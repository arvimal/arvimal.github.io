<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>cachefilesd - Tag - The Child is Father of the Man</title>
        <link>https://arvimal.github.io/tags/cachefilesd/</link>
        <description>cachefilesd - Tag - The Child is Father of the Man</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>arvimal81@gmail.com (Vimal A.R)</managingEditor>
            <webMaster>arvimal81@gmail.com (Vimal A.R)</webMaster><lastBuildDate>Wed, 12 Nov 2014 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://arvimal.github.io/tags/cachefilesd/" rel="self" type="application/rss+xml" /><item>
    <title>FSCache and the on-disk structure of the cached data</title>
    <link>https://arvimal.github.io/structure-of-cached-content-in-fscache/</link>
    <pubDate>Wed, 12 Nov 2014 00:00:00 &#43;0000</pubDate>
    <author>Vimal A.R</author>
    <guid>https://arvimal.github.io/structure-of-cached-content-in-fscache/</guid>
    <description><![CDATA[The &lsquo;cachefilesd&rsquo; kernel module will create two directories at the location specified in /etc/cachefilesd.conf. By default it&rsquo;s /var/cache/fscache/.
[root@montypython ~]# lsmod |grep -i cache cachefiles 40871 1 fscache 62354 3 nfs,cachefiles,nfsv4
Those are /var/cache/fscache/cache and /var/cache/fscache/graveyard.
The cache structure is maintained inside &lsquo;/var/cache/fscache/cache/&rsquo;, while anything that is retired or culled is moved to &lsquo;graveyard&rsquo;. The &lsquo;cachefilesd&rsquo; daemon monitors &lsquo;graveyard&rsquo; using &lsquo;dnotify&rsquo; and will delete anything that is in there.
We&rsquo;ll try an example.]]></description>
</item>
<item>
    <title>FS-Cache and FUSE</title>
    <link>https://arvimal.github.io/fscache-and-fuse/</link>
    <pubDate>Sun, 14 Sep 2014 00:00:00 &#43;0000</pubDate>
    <author>Vimal A.R</author>
    <guid>https://arvimal.github.io/fscache-and-fuse/</guid>
    <description><![CDATA[I would be working on enabling FS-Cache support in the FUSE kernel module, as part of my under graduate project.
Niels De Vos, from Red Hat Engineering, would act as my mentor and guide throughout this project. He would also be presenting this idea in the &lsquo;Linux Plumbers Conference&rsquo; being held in Germany, October 2014.
More details on the the talk can be seen at http://www.linuxplumbersconf.org/2014/ocw/sessions/2247
This feature has got quite a few requests from the FOSS world, and I&rsquo;m glad I could work on this.]]></description>
</item>
</channel>
</rss>
