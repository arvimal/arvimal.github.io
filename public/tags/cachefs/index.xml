<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>cachefs - Tag - My New Hugo Site</title>
        <link>http://example.org/tags/cachefs/</link>
        <description>cachefs - Tag - My New Hugo Site</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 12 Nov 2014 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://example.org/tags/cachefs/" rel="self" type="application/rss+xml" /><item>
    <title>FSCache and the on-disk structure of the cached data</title>
    <link>http://example.org/2014-11-12-structure-of-the-cached-content-in-fscache/</link>
    <pubDate>Wed, 12 Nov 2014 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/2014-11-12-structure-of-the-cached-content-in-fscache/</guid>
    <description><![CDATA[The &lsquo;cachefilesd&rsquo; kernel module will create two directories at the location specified in /etc/cachefilesd.conf. By default it&rsquo;s /var/cache/fscache/.
[root@montypython ~]# lsmod |grep -i cache cachefiles 40871 1 fscache 62354 3 nfs,cachefiles,nfsv4
Those are /var/cache/fscache/cache and /var/cache/fscache/graveyard.
The cache structure is maintained inside &lsquo;/var/cache/fscache/cache/&rsquo;, while anything that is retired or culled is moved to &lsquo;graveyard&rsquo;. The &lsquo;cachefilesd&rsquo; daemon monitors &lsquo;graveyard&rsquo; using &lsquo;dnotify&rsquo; and will delete anything that is in there.
We&rsquo;ll try an example.]]></description>
</item>
<item>
    <title>FS-Cache and CacheFS, what are the differences?</title>
    <link>http://example.org/2014-09-14-fs-cache-and-cachefs-what-are-the-differences/</link>
    <pubDate>Sun, 14 Sep 2014 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/2014-09-14-fs-cache-and-cachefs-what-are-the-differences/</guid>
    <description><![CDATA[FS-Cache and CacheFS. Are there any differences between these two? Initially, I thought both were same. But no, it&rsquo;s not.
CacheFS is the backend implementation which caches the data onto the disk and mainpulates it, while FS-Cache is an interface which talks to CacheFS.
So why do we need two levels here?
FS-Cache was introduced as an API or front-end for CacheFS, which can be used by any file system driver.]]></description>
</item>
</channel>
</rss>
