<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>python-namespace - Tag - The Child is Father of the Man</title>
        <link>https://arvimal.github.io/tags/python-namespace/</link>
        <description>python-namespace - Tag - The Child is Father of the Man</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>arvimal81@gmail.com (Vimal A.R)</managingEditor>
            <webMaster>arvimal81@gmail.com (Vimal A.R)</webMaster><lastBuildDate>Thu, 20 Oct 2016 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://arvimal.github.io/tags/python-namespace/" rel="self" type="application/rss+xml" /><item>
    <title>Python, Objects, and some more..</title>
    <link>https://arvimal.github.io/2016-10-20-python-objects-and-some-more/</link>
    <pubDate>Thu, 20 Oct 2016 00:00:00 &#43;0000</pubDate>
    <author>Vimal A.R</author>
    <guid>https://arvimal.github.io/2016-10-20-python-objects-and-some-more/</guid>
    <description><![CDATA[_E_verything in Python is an object, what does that mean? This post tries to discuss some very basic concepts.
What does the following assignment do?
[code language=&ldquo;python&rdquo;]
a = 1 [/code] Of course, anyone dabbled in codeÂ knows this. The statement above creates a container `a` and stores the value `1` in it.
But it seem that&rsquo;s not exactly what&rsquo;s happening, at least from Python&rsquo;s view-point.
When a = 1 is entered or executed by the python interpreter, the following happens in the backend, seemingly unknown to the user.]]></description>
</item>
</channel>
</rss>
